name: Build Firmware
on: [push, pull_request ]

jobs:
  Build-firmware:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        board: [ rpipico, rpipico2 ]
    steps:
      - uses: actions/checkout@v4

      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2

      - name: Configure build environment
        run: |
          arduino-cli config init
          arduino-cli config set board_manager.additional_urls https://github.com/earlephilhower/arduino-pico/releases/download/global/package_rp2040_index.json
          arduino-cli core update-index
          arduino-cli core install rp2040:rp2040@4.6.1

      - name: Compile firmware
        run: |
          arduino-cli compile \
            --fqbn rp2040:rp2040:${{ matrix.board }}:usbstack=nousb \
            --build-property 'compiler.cpp.extra_flags=-DARDUINO_FQBN="{build.fqbn}"' \
            --export-binaries \
            --output-dir ./build \
            ./PokeControllerForPico/

      - name: Rename file
        run: mv ./build/PokeControllerForPico.ino.uf2 ./PokeControllerForPico-${{ matrix.board }}.uf2

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pico-firmware-${{ matrix.board }}
          path: ./PokeControllerForPico-${{ matrix.board }}.uf2

  Release-nightly:
    name: Create Nightly Release
    runs-on: ubuntu-latest
    needs: "Build-firmware"
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: Nightly-build
          name: 'Nightly Build'
          prerelease: true
          body: 'This is an automated nightly build generated by GitHub Actions.'
          files: |
            artifacts/*/*.uf2
